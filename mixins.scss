// Style a hover and a focus
@mixin hocus {
  &:hover, &:focus {
    @content;
  }
}

// Outline all elements
@mixin outline {
  * {
    outline: 1px solid lime;
  }
}

// Min width breakpoint
@mixin min-width($width) {
  @media(min-width: $width) { @content; }
}

// Reset the default values of a link
@mixin reset-link {
  display: block;
  text-decoration: none;
  color: inherit;
}

// Add a container an element
// Take care of paddings on small screens
// Center this element on larger screens

// You will need $container, $bp-container and $gutter variables
@mixin container($include-padding: "true") {
  max-width: $container;
  margin: 0 auto;

  @if ($include-padding == "true") {
    padding-left: $gutter;
    padding-right: $gutter;
    box-sizing: border-box;

    @include breakpoint($bp-container) {
      padding-left: 0;
      padding-right: 0;
    }
  }
}

//  Cross-resolution style setting
@mixin adjust($map, $property: "font-size") {
  @each $item, $i in $map {
    & {
      @if( $item == "xs") {
        #{$property}: $i;
      }
      @if( $item == "sm") {
        @include breakpoint($adjust-sm) {
          #{$property}: $i;
        }
      }
      @if( $item == "md") {
        @include breakpoint($adjust-md) {
          #{$property}: $i;
        }
      }
      @if( $item == "lg") {
        @include breakpoint($adjust-lg) {
          #{$property}: $i;
        }
      }
    }
  }
}

// Create a grid and adjust the values to adjust the amount of items and breakpoints of the grid
@mixin grid($el, $bp-half: 600px, $bp-third: 900px) {
  margin: 0 -#{$gutter};

  #{$el} {
    width: calc(100% - #{$double-gutter});
    display: inline-block;
    margin: 1rem $gutter;
    vertical-align: top;

    @include breakpoint($bp-half) {
      width: calc(49% - #{$double-gutter});
    }
    @include breakpoint($bp-third) {
      width: calc(33% - #{$double-gutter});
    }
  }
}
